{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "Backend service for sensor data collection and management.",
        "title": "Sensor Service API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "email": "support@example.com"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/filter-byid": {
            "get": {
                "description": "Returns all sensor readings that match the given ID1 and ID2",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sensors"
                ],
                "summary": "Retrieve sensor data by ID1 and ID2",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID1 value (e.g., 'A')",
                        "name": "id1",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID2 value (e.g., '100')",
                        "name": "id2",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handler.ReadingData"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/sensors": {
            "get": {
                "description": "Returns all sensor readings from the database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sensors"
                ],
                "summary": "Retrieve all sensor data",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handler.ReadingData"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/sensors/filter-bytime": {
            "get": {
                "description": "Returns all sensor readings between a start and end timestamp",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sensors"
                ],
                "summary": "Retrieve sensor data by time range",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start timestamp (format: YYYY-MM-DD HH:MM:SS)",
                        "name": "start",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "End timestamp (format: YYYY-MM-DD HH:MM:SS)",
                        "name": "end",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handler.ReadingData"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/sensors/frequency": {
            "put": {
                "description": "Update the data generation frequency for a specific sensor type (TEMPERATURE, MOTION, HUMIDITY).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sensors"
                ],
                "summary": "Change sensor frequency",
                "parameters": [
                    {
                        "description": "Sensor type and frequency",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handler.ReadingData": {
            "type": "object",
            "properties": {
                "id1": {
                    "type": "string"
                },
                "id2": {
                    "type": "string"
                },
                "sensor_type": {
                    "type": "string"
                },
                "sensor_value": {
                    "type": "string"
                },
                "time_stamp": {
                    "type": "string"
                }
            }
        },
        "handler.Request": {
            "type": "object",
            "properties": {
                "frequency": {
                    "description": "duration format: \"2s\", \"500ms\", \"1m\"",
                    "type": "string",
                    "example": "2s"
                },
                "sensor": {
                    "description": "TEMPERATURE, MOTION, HUMIDITY",
                    "type": "string",
                    "example": "TEMPERATURE"
                }
            }
        },
        "handler.Response": {
            "type": "object",
            "properties": {
                "msg": {
                    "type": "string",
                    "example": "Frequency changed Successfully"
                },
                "status": {
                    "type": "string",
                    "example": "S"
                }
            }
        }
    }
}